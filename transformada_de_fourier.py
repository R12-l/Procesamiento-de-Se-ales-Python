# -*- coding: utf-8 -*-
"""transformada de fourier.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-QuzRojO-AMBSztcDxOtMrQo8BL71GsX
"""

import numpy as np
import matplotlib.pyplot as plt

def coef(k,alpha):
  if np.abs(k)!=1:
   final= (1/(2*np.pi*(k**2-1)))*((-1)**(k+1)-np.exp(-1j*k*alpha)*(np.cos(alpha)+1j*k*np.sin(alpha)))
  elif k==-1:
    final=(1/(8*np.pi)*(1-np.cos(2*alpha)-1j*(2*np.pi-2*alpha + np.sin(2*alpha))))
  else:
     final=(1/(8*np.pi)*(1-np.cos(2*alpha)-1j*(2*np.pi-2*alpha + np.sin(2*alpha))))
  return final

#(1/(2*np.pi*(k*2-1)))((-1)*(k+1) - np.exp(-1j*k*alpha)(np.cos(alpha)+1j*k*np.sin(alpha)))
coef(2,np.pi/2)

coeficientes=[]
nc=10
k=np.arange(-nc, nc+1)
for i in k:
  coeficientes.append(coef(i.astype(float),np.pi/2))
plt.stem(np.abs(coeficientes))